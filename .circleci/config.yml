# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: golang:1.9.2
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/golang-static

    steps:
      - checkout

      #circleci dependencies need to be installed before any circleci specific commands (e.g. restore_cache)
      #https://github.com/circleci/circleci-docs/issues/1740
      #https://circleci.com/docs/2.0/custom-images/#adding-required-and-custom-tools-or-files
      - run:
          name: install circleci dependencies
          command: |
            apt-get update
            apt-get -y install git ssh tar gzip ca-certificates

#      # Download and cache dependencies
#      - restore_cache:
#          keys:
#          - v1-dep-{{ .Environment.ANSIBLE_VERSION }}
#          # fallback to using the latest cache if no exact match is found
#          - v1-dep-
      - run: apt-get -y install libsqlite3-dev
      - run:
          name: build packages
          command: |
            git clone https://github.com/cloudflare/cfssl $GOPATH/src/github.com/cloudflare/cfssl
            cd $GOPATH/src/github.com/cloudflare/cfssl
            go get github.com/cloudflare/cfssl_trust/...
            go get github.com/GeertJohan/go.rice/rice
            rice embed-go -i=./cli/serve
            cp -R /go/src/github.com/cloudflare/cfssl_trust /etc/cfssl
            go build -o bin/cfssl ./cmd/cfssl
            go build -o bin/cfssljson ./cmd/cfssljson

#      - save_cache:
#          paths:
#            - ./~venv
#            - ./ansible.cfg
#          key: v1-dep-{{ .Environment.ANSIBLE_VERSION }}
      - store_artifacts:
          path: ~/golang-static/cfssl/bin/cfssl
      - store_artifacts:
          path: ~/golang-static/cfssl/bin/cfssljson

